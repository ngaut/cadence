var searchIndex = {};
searchIndex["cadence"] = {"doc":"An extensible Statsd client for Rust!","items":[[3,"StatsdClient","cadence","Client for Statsd that implements various traits to record metrics.",null,null],[3,"ConsoleMetricSink","","Implementation of a `MetricSink` that emits metrics to the console.",null,null],[3,"LoggingMetricSink","","Implementation of a `MetricSink` that emits metrics using the`log!` macro.",null,null],[3,"NopMetricSink","","Implementation of a `MetricSink` that discards all metrics.",null,null],[3,"UdpMetricSink","","Implementation of a `MetricSink` that emits metrics over UDP.",null,null],[3,"MetricError","","Error generated by this library potentially wrapping another\ntype of error (exposed via the `Error` trait).",null,null],[3,"Counter","","Counters are simple values incremented or decremented by a client.",null,null],[3,"Timer","","Timers are a positive number of milliseconds between a start and end point.",null,null],[3,"Gauge","","Gauges are an instantaneous value determined by the client.",null,null],[3,"Meter","","Meters measure the rate at which events occur as determined by the server.",null,null],[4,"ErrorKind","","Potential categories an error from this library falls into.",null,null],[13,"InvalidInput","","",0,null],[13,"IoError","","",0,null],[0,"prelude","","Export commonly used parts of Cadence for easy glob imports",null,null],[8,"Counted","cadence::prelude","Trait for incrementing and decrementing counters.",null,null],[10,"incr","","Increment the counter by `1`",1,{"inputs":[{"name":"counted"},{"name":"str"}],"output":{"name":"metricresult"}}],[10,"decr","","Decrement the counter by `1`",1,{"inputs":[{"name":"counted"},{"name":"str"}],"output":{"name":"metricresult"}}],[10,"count","","Increment or decrement the counter by the given amount",1,{"inputs":[{"name":"counted"},{"name":"str"},{"name":"i64"}],"output":{"name":"metricresult"}}],[8,"Timed","","Trait for recording timings in milliseconds.",null,null],[10,"time","","Record a timing in milliseconds with the given key",2,{"inputs":[{"name":"timed"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[8,"Gauged","","Trait for recording gauge values.",null,null],[10,"gauge","","Record a gauge value with the given key",3,{"inputs":[{"name":"gauged"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[8,"Metered","","Trait for recording meter values.",null,null],[10,"mark","","Record a single metered event with the given key",4,{"inputs":[{"name":"metered"},{"name":"str"}],"output":{"name":"metricresult"}}],[10,"meter","","Record a meter value with the given key",4,{"inputs":[{"name":"metered"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[11,"from_sink","cadence","Create a new client instance that will use the given prefix for\nall metrics emitted to the given `MetricSink` implementation.",5,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"statsdclient"}}],[11,"from_udp_host","","Create a new client instance that will use the given prefix to send\nmetrics to the given host over UDP using an appropriate sink. This is\nthe construction method that most users of this library will use.",5,{"inputs":[{"name":"str"},{"name":"a"}],"output":{"name":"metricresult"}}],[11,"incr","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"}],"output":{"name":"metricresult"}}],[11,"decr","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"}],"output":{"name":"metricresult"}}],[11,"count","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"},{"name":"i64"}],"output":{"name":"metricresult"}}],[11,"time","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[11,"gauge","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[11,"mark","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"}],"output":{"name":"metricresult"}}],[11,"meter","","",5,{"inputs":[{"name":"statsdclient"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[11,"from","","Construct a new `UdpMetricSink` instance.",6,{"inputs":[{"name":"a"},{"name":"udpsocket"}],"output":{"name":"metricresult"}}],[11,"emit","","",6,{"inputs":[{"name":"udpmetricsink"},{"name":"str"}],"output":{"name":"result"}}],[11,"emit","","",7,{"inputs":[{"name":"nopmetricsink"},{"name":"str"}],"output":{"name":"result"}}],[11,"emit","","",8,{"inputs":[{"name":"consolemetricsink"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"loglevel"}],"output":{"name":"loggingmetricsink"}}],[11,"emit","","",9,{"inputs":[{"name":"loggingmetricsink"},{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"counter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"counter"},{"name":"counter"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"counter"},{"name":"counter"}],"output":{"name":"bool"}}],[11,"new","","",10,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i64"}],"output":{"name":"counter"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"timer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"timer"},{"name":"timer"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"timer"},{"name":"timer"}],"output":{"name":"bool"}}],[11,"new","","",11,{"inputs":[{"name":"str"},{"name":"str"},{"name":"u64"}],"output":{"name":"timer"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"gauge"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"gauge"},{"name":"gauge"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"gauge"},{"name":"gauge"}],"output":{"name":"bool"}}],[11,"new","","",12,{"inputs":[{"name":"str"},{"name":"str"},{"name":"u64"}],"output":{"name":"gauge"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"meter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"meter"},{"name":"meter"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"meter"},{"name":"meter"}],"output":{"name":"bool"}}],[11,"new","","",13,{"inputs":[{"name":"str"},{"name":"str"},{"name":"u64"}],"output":{"name":"meter"}}],[11,"clone","","",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"metricerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kind","","Return the kind of the error",14,{"inputs":[{"name":"metricerror"}],"output":{"name":"errorkind"}}],[11,"fmt","","",14,{"inputs":[{"name":"metricerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",14,{"inputs":[{"name":"metricerror"}],"output":{"name":"str"}}],[11,"cause","","",14,{"inputs":[{"name":"metricerror"}],"output":{"name":"option"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"metricerror"}}],[11,"from","","",14,null],[6,"MetricResult","","",null,null],[17,"DEFAULT_PORT","","",null,null],[8,"Counted","","Trait for incrementing and decrementing counters.",null,null],[10,"incr","","Increment the counter by `1`",1,{"inputs":[{"name":"counted"},{"name":"str"}],"output":{"name":"metricresult"}}],[10,"decr","","Decrement the counter by `1`",1,{"inputs":[{"name":"counted"},{"name":"str"}],"output":{"name":"metricresult"}}],[10,"count","","Increment or decrement the counter by the given amount",1,{"inputs":[{"name":"counted"},{"name":"str"},{"name":"i64"}],"output":{"name":"metricresult"}}],[8,"Timed","","Trait for recording timings in milliseconds.",null,null],[10,"time","","Record a timing in milliseconds with the given key",2,{"inputs":[{"name":"timed"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[8,"Gauged","","Trait for recording gauge values.",null,null],[10,"gauge","","Record a gauge value with the given key",3,{"inputs":[{"name":"gauged"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[8,"Metered","","Trait for recording meter values.",null,null],[10,"mark","","Record a single metered event with the given key",4,{"inputs":[{"name":"metered"},{"name":"str"}],"output":{"name":"metricresult"}}],[10,"meter","","Record a meter value with the given key",4,{"inputs":[{"name":"metered"},{"name":"str"},{"name":"u64"}],"output":{"name":"metricresult"}}],[8,"MetricSink","","Trait for various backends that send Statsd metrics somewhere.",null,null],[10,"emit","","Send the Statsd metric using this sink and return the number of bytes\nwritten or an I/O error.",15,{"inputs":[{"name":"metricsink"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[4,"ErrorKind"],[8,"Counted"],[8,"Timed"],[8,"Gauged"],[8,"Metered"],[3,"StatsdClient"],[3,"UdpMetricSink"],[3,"NopMetricSink"],[3,"ConsoleMetricSink"],[3,"LoggingMetricSink"],[3,"Counter"],[3,"Timer"],[3,"Gauge"],[3,"Meter"],[3,"MetricError"],[8,"MetricSink"]]};
initSearch(searchIndex);
